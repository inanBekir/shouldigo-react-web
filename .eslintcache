[{"/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/Root.js":"1","/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/components/Header.js":"2","/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/Home.js":"3","/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/Auth/AuthLoading.js":"4","/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/components/experiences/Experience.js":"5","/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/components/experiences/Comments.js":"6","/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/components/experiences/YourExperiences.js":"7","/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/components/experiences/ItemService.js":"8","/Users/bekirinan/Downloads/shouldigo-react-web/src/App.js":"9","/Users/bekirinan/Downloads/shouldigo-react-web/src/firebase/firebase.utils.js":"10","/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/components/experiences/Chat.js":"11","/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/redux/reducer.js":"12","/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/Auth/Profile.js":"13","/Users/bekirinan/Downloads/shouldigo-react-web/src/index.js":"14","/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/Auth/Login.js":"15"},{"size":614,"mtime":1608855023027,"results":"16","hashOfConfig":"17"},{"size":3485,"mtime":1608995157689,"results":"18","hashOfConfig":"17"},{"size":7869,"mtime":1608875897538,"results":"19","hashOfConfig":"17"},{"size":2109,"mtime":1608994851413,"results":"20","hashOfConfig":"17"},{"size":14548,"mtime":1608390167863,"results":"21","hashOfConfig":"17"},{"size":5702,"mtime":1608952286001,"results":"22","hashOfConfig":"17"},{"size":3108,"mtime":1608951427352,"results":"23","hashOfConfig":"17"},{"size":5297,"mtime":1608950253132,"results":"24","hashOfConfig":"17"},{"size":278,"mtime":1608326246244,"results":"25","hashOfConfig":"17"},{"size":880,"mtime":1606599558988,"results":"26","hashOfConfig":"17"},{"size":2972,"mtime":1608430539359,"results":"27","hashOfConfig":"17"},{"size":3973,"mtime":1608326174889,"results":"28","hashOfConfig":"17"},{"size":3319,"mtime":1608958382780,"results":"29","hashOfConfig":"17"},{"size":500,"mtime":1606318378527,"results":"30","hashOfConfig":"17"},{"size":3451,"mtime":1608995039350,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11em9aa",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/Root.js",[],"/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/components/Header.js",["68"],"/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/Home.js",["69","70","71"],"import React, { useState, useEffect } from 'react';\nimport { db } from '../firebase/firebase.utils';\nimport './scss/Home.scss'\nimport { useHistory } from \"react-router-dom\";\nimport Slider from \"react-slick\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport { red, grey } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport GradeIcon from '@material-ui/icons/Grade';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { UpdateExperience } from './components/experiences/ItemService';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 325,\n    backgroundColor: grey[800],\n    borderRadius:'1.2rem',\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nfunction Home() {\n    const history = useHistory();\n    const [experiences, setExperiences] = useState([]);\n    const classes = useStyles();\n    const [indexNumber, setIndexNumber] = useState(0);\n    const large = useMediaQuery('(max-width:991px)');\n    const medium = useMediaQuery('(max-width:767px)');\n    const xLarge = useMediaQuery('(max-width:1200px)');\n\n\n    function SliderNextArrow(props) {\n      const { className, style, onClick } = props;\n      return (\n       <ArrowForwardIosIcon  className={className}\n        style={{ ...style, display: \"block\", height:'100%' }}\n        onClick={onClick} fontSize=\"large\" />\n      );\n    }\n\n    function SliderPrevArrow(props) {\n      const { className, style, onClick } = props;\n      return (\n       <ArrowBackIosIcon  className={className}\n        style={{ ...style, display: \"block\", height:'100%' }}\n        onClick={onClick} fontSize=\"large\" />\n      );\n    }\n   \n    if (medium) {\n      var settings = {\n        dots: false,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        nextArrow: <SliderNextArrow />,\n        prevArrow: <SliderPrevArrow />,\n      };\n    } else if (large) {\n      var settings = {\n        dots: false,\n        slidesToShow: 2,\n        slidesToScroll: 2,\n        nextArrow: <SliderNextArrow />,\n        prevArrow: <SliderPrevArrow />,\n      };\n    } else if (xLarge) {\n      var settings = {\n        dots: false,\n        slidesToShow: 3,\n        slidesToScroll: 3,\n        nextArrow: <SliderNextArrow />,\n        prevArrow: <SliderPrevArrow />,\n      };\n    } else {\n      var settings = {\n        dots: false,\n        slidesToShow: 4,\n        slidesToScroll: 4,\n        nextArrow: <SliderNextArrow />,\n        prevArrow: <SliderPrevArrow />,\n      };\n    }\n\n    useEffect(() => {\n        db.collection('Experiences').get()\n        .then(querySnapshot => {\n        const allExperiences = [];\n        querySnapshot.forEach( doc => {\n\n            allExperiences.push({\n                ...doc.data(),\n                key: doc.id,\n              });\n        })\n        setExperiences(allExperiences);\n        setIndexNumber(allExperiences.length);\n      })\n      .catch(err => {\n        console.log(err.message)\n      })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, []);\n\n      const SaveCountGoExperience = (item) => {\n        UpdateExperience(item);\n        history.push('experience',{param: item.key})\n      };\n    \n  return (\n    <div className=\"home-content\">\n      <div className=\"card-content\">\n        <div className=\"text-content\">\n          <p className=\"head-text\">Most Popular</p>\n          <p className=\"index-text\">({indexNumber})</p>\n        </div>\n        <div className=\"slider-content\">\n        <Slider {...settings}>\n          {experiences.map((item, index) => (\n          <Card key={item.key} className={classes.root}>\n          <CardHeader\n            avatar={\n              <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                 <img\n                src={item.experience_owner_photo}\n                width=\"40\"\n                height=\"40\"\n                className=\"d-inline-block align-top\"\n                alt=\"React Bootstrap logo\"\n            />\n              </Avatar>\n            }\n            action={\n              <IconButton aria-label=\"settings\">\n                <MoreVertIcon />\n              </IconButton>\n            }\n            title={<p>{item.name}</p>}\n            subheader={<p>{new Date(item.createdAt.toDate()).toDateString()}</p>}\n          />\n          <CardMedia\n            className={classes.media}\n            image={item.image}\n          />\n          <CardContent>\n            <div className=\"card-icons-content-col\">\n              <div className=\"card-icons-content-row\">\n                <VisibilityIcon/>\n                <p className=\"card-left-text\">{item.viewedCount} views</p>\n              </div>\n              <div className=\"card-icons-content-row\">\n                <p className=\"card-right-text\">{item.adress}</p>\n                <LocationOnIcon/>\n              </div>\n            </div>\n            <div className=\"card-icons-content-col\">\n              <div className=\"card-icons-content-row\">\n                <ThumbUpAltIcon/>\n                <p className=\"card-left-text\">{item.like} likes</p>\n              </div>\n              <div className=\"card-icons-content-row\">\n                <p className=\"card-right-text\">{item.unlike} unlikes</p>\n                <ThumbDownIcon/>\n              </div>\n            </div>\n            <div className=\"card-icons-content-col\">\n              <div className=\"card-icons-content-row\">\n                <CommentIcon/>\n                <p className=\"card-left-text\">{item.commentedCount} comments</p>\n              </div>\n              <div className=\"card-icons-content-row\">\n                <p className=\"card-right-text\">{item.ratedCount} times rated</p>\n                <GradeIcon/>\n              </div>\n            </div>\n          </CardContent>\n          <CardActions disableSpacing>\n            <div>\n            <Tooltip title=\"Add to favorites\">\n              <IconButton aria-label=\"add to favorites\">\n                <FavoriteIcon />\n              </IconButton>\n              </Tooltip>\n              <Tooltip title=\"Share\">\n              <IconButton aria-label=\"share\">\n                <ShareIcon />\n              </IconButton>\n              </Tooltip>\n            </div>\n            <Tooltip title=\"Click to view\">\n              <IconButton onClick={() => { SaveCountGoExperience(item) }} aria-label=\"view\">\n                <ArrowForwardIcon fontSize=\"large\" />\n              </IconButton>\n            </Tooltip>\n          </CardActions>\n        </Card>\n          ))}\n        </Slider>\n        </div>\n        </div>\n      </div>\n  );\n}\n\nexport default Home;\n",["72","73"],"/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/Auth/AuthLoading.js",["74"],"import React, {useState, useEffect} from 'react';\nimport { db, auth } from '../../firebase/firebase.utils';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Login from './Login';\nimport Register from './Register';\nimport Home from '../Home';\nimport Root from '../Root';\nimport Experience from '../components/experiences/Experience';\nimport Profile from '../Auth/Profile';\nimport Comments from '../components/experiences/Comments';\nimport Chat from '../components/experiences/Chat';\nimport YourExperiences from '../components/experiences/YourExperiences';\n\nfunction AuthLoading() {\n    const [currentUser, setCurrentUser] = useState('');\n\n    useEffect(() => {\n          auth.onAuthStateChanged(user => {\n            if(user){\n              setCurrentUser(user);\n              localStorage.setItem('userUID', user.uid);\n            }\n          });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [currentUser]);\n\n        return (\n            <BrowserRouter>\n                <Root>\n                    <React.Fragment>\n                        {!currentUser ? \n                           <React.Fragment>\n                            <Route exact path={\"/\"} component={Login}/>\n                            <Route path={\"/register\"} component={Register}/>\n                          </React.Fragment> \n                        :\n                            <React.Fragment>\n                                <Route exact path={\"/\"} component={Home}/>\n                                <Route path={\"/experience\"} component={Experience}/>\n                                <Route path={\"/your-experiences\"} component={YourExperiences}/>\n                                <Route path={\"/profile\"} component={Profile}/>\n                                <Route path={\"/comments\"} component={Comments}/>\n                                <Route path={\"/chat\"} component={Chat}/>\n                            </React.Fragment>\n                        }\n                    </React.Fragment>\n                </Root>\n            </BrowserRouter>\n        );\n  }\n  \n  export default AuthLoading;\n  ","/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/components/experiences/Experience.js",[],"/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/components/experiences/Comments.js",["75"],"/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/components/experiences/YourExperiences.js",[],["76","77"],"/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/components/experiences/ItemService.js",["78","79","80","81","82","83","84","85"],"/Users/bekirinan/Downloads/shouldigo-react-web/src/App.js",[],"/Users/bekirinan/Downloads/shouldigo-react-web/src/firebase/firebase.utils.js",[],"/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/components/experiences/Chat.js",["86"],"import React, { useState, useEffect } from 'react';\nimport '../../scss/Chat.scss'\nimport { useHistory } from \"react-router-dom\";\nimport { Input, Button ,MessageList} from 'react-chat-elements'\nimport 'react-chat-elements/dist/main.css';\nimport { db } from '../../../firebase/firebase.utils'\nimport { GetProfile, AddMessage } from './ItemService';\nimport {useDispatch, useSelector} from 'react-redux';\n\nfunction Chat(props) {\n    const history = useHistory();\n    const experienceId = props.location.state.param;\n    const [messages, setMessages] = useState([]);\n    const [yourMessage, setYourMessage] = useState('');\n    const dispatch = useDispatch();\n    const [userUID] = useState(localStorage.getItem('userUID'));\n    const profile = useSelector((state) => state.profile);\n\n    useEffect(() => {\n      GetProfile(dispatch, userUID);\n       db.collection('Messages')\n      .where('experienceId', '==', experienceId)\n      .orderBy('createdAt', 'asc')\n      .get()\n      .then(function (querySnapshot) {\n        var messagesAll = [];\n        querySnapshot.forEach(function (documentSnapshot) {\n          messagesAll.push({\n            _id: documentSnapshot.data()._id,\n            text: documentSnapshot.data().text,\n            createdAt: new Date(documentSnapshot.data().createdAt.toDate()),\n            user: documentSnapshot.data().user,\n          });\n        });\n        setMessages(messagesAll);\n      });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [yourMessage]);\n\n      const onSend = () => {\n        AddMessage(\n          userUID,\n          yourMessage,\n          experienceId,\n          userUID,\n          profile.photoURL,\n        );\n        setYourMessage('');\n        window.location.reload(false)\n      };\n    \n      function ChatList({ items }) {\n        return items.map(item => (\n            <MessageList\n            className='message-list'\n            lockable={true}\n            toBottomHeight={'100%'}\n            dataSource={[\n                {\n                    avatar:item.user.avatar,\n                    position: item.user._id === userUID ? 'right': 'left',\n                    type: 'text',\n                    text: item.text,\n                    date: new Date(item.createdAt),\n                }\n            ]} />\n        ));\n      }\n\n      const handleChange = (event) => {\n        setYourMessage(event.target.value);\n      };\n\n  return (\n    <div className=\"container conta-chat\">\n        <ChatList items={messages}/>\n        <div className=\"chat-input-div\">\n        <Input\n            defaultValue={yourMessage}\n            onChange={handleChange}\n            placeholder=\"Type here...\"\n            multiline={true}\n            rightButtons={\n            <Button\n                onClick={() => { onSend() }}\n                color='white'\n                backgroundColor='#FE5D26'\n                text='Send'/>\n            }\n        />\n              </div>\n       \n    </div>\n  );\n}\n\nexport default Chat;\n","/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/redux/reducer.js",[],"/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/Auth/Profile.js",["87"],"import React, { useState, useEffect } from 'react';\nimport '../scss/Profile.scss'\nimport { useHistory } from \"react-router-dom\";\nimport {useDispatch, useSelector} from 'react-redux';\nimport {GetProfile} from '../components/experiences/ItemService';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport PersonIcon from '@material-ui/icons/Person';\nimport TodayIcon from '@material-ui/icons/Today';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport EditIcon from '@material-ui/icons/Edit';\n\nconst chatActiveStatus = {color:'#399E5A'};\nconst chatInactiveStatus = {color:'#D80032'};\nfunction Profile() {\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const profile = useSelector((state) => state.profile);\n    const [userUID] = useState(localStorage.getItem('userUID'));\n\n    useEffect(() => {\n        GetProfile(dispatch, userUID);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [dispatch, userUID]);\n    \n  return (\n    <div className=\"container conta-profile\">\n       <div className=\"top-div\">\n        <div className=\"left-img-div\">\n            {console.log(profile)}\n            <img src={profile.photoURL} alt=\"experienceimage\"/>\n        </div>\n        <div className=\"right-content-div\">\n            <div className=\"right-content-inside\">\n                <ChatIcon style={{ color: '#FE5D26' }} fontSize=\"small\" />\n                <p className=\"orange-tag\">chat status : </p>\n                <p className=\"bio-text\" style={ profile.isChatOpen\n                  ? chatActiveStatus\n                  : chatInactiveStatus\n              }>{profile.isChatOpen ? 'active' : 'inactive'} </p>\n            </div>\n            <div className=\"right-content-inside\">\n                <PersonIcon style={{ color: '#FE5D26' }} fontSize=\"small\" />\n                <p className=\"orange-tag\">name : </p>\n                <p className=\"bio-text\">{profile.name} </p>\n            </div>\n            <div className=\"right-content-inside\">\n                <TodayIcon style={{ color: '#FE5D26' }} fontSize=\"small\" />\n                <p className=\"orange-tag\">birthdate : </p>\n                <p className=\"bio-text\">{profile.name} </p>\n            </div>\n            <div className=\"right-content-inside\">\n                <EmojiEmotionsIcon style={{ color: '#FE5D26' }} fontSize=\"small\" />\n                <p className=\"orange-tag\">age : </p>\n                <p className=\"bio-text\">{profile.name} </p>\n            </div>\n        </div>\n       </div>\n       <div className=\"bottom-div\">\n           <div className=\"bottom-div-inside\">\n                <DescriptionIcon style={{ color: '#FE5D26' }} fontSize=\"small\" />\n                <p className=\"orange-tag\">bio: </p>\n                <p className=\"bio-text\">{profile.bio} </p>\n            </div>\n            <div className=\"bottom-div-inside2\">\n            <Tooltip title=\"Edit profile\">\n                  <IconButton aria-label=\"edit\">\n                    <EditIcon style={{ color: '#FE5D26' }} fontSize=\"large\" />\n                  </IconButton>\n              </Tooltip>\n            </div>\n       </div>\n    </div>\n  );\n}\n\nexport default Profile;\n","/Users/bekirinan/Downloads/shouldigo-react-web/src/index.js",[],"/Users/bekirinan/Downloads/shouldigo-react-web/src/screens/Auth/Login.js",[],{"ruleId":"88","severity":1,"message":"89","line":15,"column":11,"nodeType":"90","messageId":"91","endLine":15,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":93,"column":11,"nodeType":"90","messageId":"94","endLine":93,"endColumn":19},{"ruleId":"92","severity":1,"message":"93","line":101,"column":11,"nodeType":"90","messageId":"94","endLine":101,"endColumn":19},{"ruleId":"92","severity":1,"message":"93","line":109,"column":11,"nodeType":"90","messageId":"94","endLine":109,"endColumn":19},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"88","severity":1,"message":"99","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":12},{"ruleId":"88","severity":1,"message":"89","line":27,"column":11,"nodeType":"90","messageId":"91","endLine":27,"endColumn":18},{"ruleId":"95","replacedBy":"100"},{"ruleId":"97","replacedBy":"101"},{"ruleId":"88","severity":1,"message":"102","line":2,"column":5,"nodeType":"90","messageId":"91","endLine":2,"endColumn":22},{"ruleId":"88","severity":1,"message":"103","line":4,"column":5,"nodeType":"90","messageId":"91","endLine":4,"endColumn":12},{"ruleId":"88","severity":1,"message":"104","line":7,"column":5,"nodeType":"90","messageId":"91","endLine":7,"endColumn":30},{"ruleId":"88","severity":1,"message":"105","line":8,"column":5,"nodeType":"90","messageId":"91","endLine":8,"endColumn":28},{"ruleId":"88","severity":1,"message":"106","line":9,"column":5,"nodeType":"90","messageId":"91","endLine":9,"endColumn":32},{"ruleId":"88","severity":1,"message":"107","line":10,"column":5,"nodeType":"90","messageId":"91","endLine":10,"endColumn":21},{"ruleId":"88","severity":1,"message":"108","line":116,"column":11,"nodeType":"90","messageId":"91","endLine":116,"endColumn":26},{"ruleId":"88","severity":1,"message":"109","line":117,"column":11,"nodeType":"90","messageId":"91","endLine":117,"endColumn":32},{"ruleId":"88","severity":1,"message":"89","line":11,"column":11,"nodeType":"90","messageId":"91","endLine":11,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":18,"column":11,"nodeType":"90","messageId":"91","endLine":18,"endColumn":18},"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","no-redeclare","'settings' is already defined.","redeclared","no-native-reassign",["110"],"no-negated-in-lhs",["111"],"'db' is defined but never used.",["110"],["111"],"'getAllExperiences' is defined but never used.","'loading' is defined but never used.","'getMostPopularExperiences' is defined but never used.","'getMostLikedExperiences' is defined but never used.","'getMostCommentedExperiences' is defined but never used.","'getNotifications' is defined but never used.","'successMesTitle' is assigned a value but never used.","'successMesDescription' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]